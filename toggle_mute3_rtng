#!/bin/bash

mute () { "$HOME/bin/mute_radiotray-ng" -m /usr/bin/radiotray-ng && rename_xmuted; }
unmute () { "$HOME/bin/mute_radiotray-ng" -u /usr/bin/radiotray-ng && rename_muted; }
rename_xmuted () { if [ -f "$HOME/.conky/xmuted.png" ]; then { mv "$HOME/.conky/xmuted.png" "$HOME/.conky/muted.png"; } fi }
rename_muted () { if [ -f "$HOME/.conky/muted.png" ]; then { mv "$HOME/.conky/muted.png" "$HOME/.conky/xmuted.png"; } fi }

# Adlength buffer overrun for daytime ads. Insert value here in secs
buffer=15

# Conky countdown timer
conkytimer()
{

sec=$1

for (( i = 0; i < sec; i++ )); do
        # write remaining sec to file
        timer=$((sec-i))
        display="                  ${timer}"
        echo "$display" > ~/.conkytimer
        # wait 1sec
        sleep 1
done

if [[ -f ~/.conkytimer ]]; then rm ~/.conkytimer & touch ~/.conkytimer
fi
}

# Get current volume level and show OSD dialog
show_osd_dialog()
{
   vollevel=$(amixer -D pulse get Master | awk -F 'Left:|[][]' 'BEGIN {RS=""}{ print $3 }')

   # Show dialog and remove "%" character from $vollevel
   qdbus org.kde.plasmashell /org/kde/osdService org.kde.osdService.volumeChanged ${vollevel::-1}
}

top_of_the_hour_dialog()
      {
        mute

        qdbus org.kde.plasmashell /org/kde/osdService org.kde.osdService.volumeChanged 0
        
        conkytimer "$adlength"
          
        unmute

        show_osd_dialog

        exit
      }

# check if time is between top of the hour and 7 minutes or 58, 59 or 00
check_top_of_the_hour()
{  
   # Get current time in minutes
   currenttime=$(date +%M)

   # check if time is :58, :59 or :00 (for Talkradio)
   if [ "$currenttime" -eq "58" ] || [ "$currenttime" -eq "59" ]  || [ "$currenttime" -eq "00" ]; then

        declare -i adlength=120
        
        top_of_the_hour_dialog
   fi
   
   # check if time is between top of the hour and 7 minutes
   if [ "$currenttime" -gt "00" ] && [ "$currenttime" -lt "07" ]; then


        declare -i adlength=30
        
        top_of_the_hour_dialog
   fi

}


check_top_of_the_hour

mute

qdbus org.kde.plasmashell /org/kde/osdService org.kde.osdService.volumeChanged 0

get_adbreak_length() 
{
   # Get stream metadata
   ffprobe http://media-ice.musicradio.com:80/LBCUK &> "$HOME/stream.txt"

   # Cut six digit adbreak length from metadata file from the line beginning with 'StreamUrl'and remove any :
   adbreaklength=$(awk -F 'StreamUrl' '{print $2}' "$HOME/stream.txt" | cut -c25-30 | sed 's/://g')

   # Run check_for_off_peak()
   check_for_off_peak

   # Check if $adbreaklength is not null
   if [ -n "$adbreaklength" ]
      then

      # Set as integer and convert from ms to seconds + buffer value
      declare -i ms=$adbreaklength
      declare -i value=("$ms"/1000+"$buffer") 

      echo "${value[@]}"
   fi
}

check_for_off_peak()
{  
   # Get current time in minutes
   currenttime=$(date +%H%M)

   if [ "$currenttime" -gt "1900" ] || [ "$currenttime" -lt "0400" ]; then
   timeout=185
   buffer=0
   fi
}

# Set $seconds to value returned by get_adbreak_length()
declare -i seconds
seconds=$(get_adbreak_length)

# Function for when there is no adbreaklength returned
no_adbreak_length()
{

# Sets timeout value for function
timeout=225 # <--- Set value for adbreak length

# Run check_for_off_peak()
check_for_off_peak

# Wait until $seconds is greater than 0 or $SECONDS (time of running script) is greater than $timeout then execute do loop
until [ "$seconds" -gt 0 ] || [ "$SECONDS" -gt $timeout ] 

   do
      seconds=$(get_adbreak_length)
      display="                  $((timeout - SECONDS))*"
      echo "$display" > ~/.conkytimer
      sleep 2
   done
}

no_adbreak_length

conkytimer "$seconds"

unmute

show_osd_dialog
